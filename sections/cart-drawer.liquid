<cart-drawer>
  <div class="cart-drawer" id="cart-drawer" aria-hidden="true" aria-modal="true" aria-label="Cart Drawer" role="dialog" tabindex="-1">
    <form id="cart-drawer__form" action="{{ routes.cart_url }}" method="post" class="cart-drawer__form">
      <div class="cart-drawer__inner">
        <div class="cart-drawer__header">
          <h2 class="cart-drawer__title">{{ section.settings.cart_title }}</h2>
          <button type="button" class="cart-drawer__close modal__close-button link link--text focus-inset" id="cart-drawer__close" aria-label="{{ 'accessibility.close' | t }}">
            {% render 'icon' icon: 'close' %}
          </button>
        </div>
        <div class="cart-drawer__content" id="cart-drawer__content" data-id="{{ section.id }}">
          {% if cart.items.size == 0 %}
            <div class="cart-drawer__empty">
              <h3>{{ section.settings.empty_text | default: "Your cart is empty." }}</h3>
              <a href="{{ section.settings.button | default: "/>" }}" class="button">{{ section.settings.button_text | default: "Shop All" }}</a>
            </div>
          {% else %}
            <div class="cart-drawer__items" id="cart-drawer-items">
              {% for item in cart.items %}
                {% render 'cart-item' item: item, idx: forloop.index %}
              {% endfor %}
            </div>
            <div class="cart-drawer__footer">
              <div class="single__product">
                <div data-rebuy-id="161287"></div>
              </div>
              <div data-rebuy-id="161289"></div>
              <div class="cart-drawer__subtotal-wrapper" id="cart-drawer-subtotal">
                <h4 class="body-sm">Subtotal</h4>
                <div class="cart-drawer__loading-container">
                  <h4 class="cart-drawer__subtotal">{{ cart.total_price | money_without_trailing_zeros }}</h4>
                  <div class="loading-overlay hidden" id="cart-drawer-loading">
                    <div class="loading-overlay__spinner">
                      <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                        <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                      </svg>
                    </div>
                  </div>
                </div>
              </div>
              <a href="/checkout" class="button button--full" name="checkout" form="cart">{{ 'sections.cart.checkout' | t }}</a>
              <h6 class="cart-drawer__taxes body-xs">{{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}</h6>


              <div class="cart-text-with-icon">
                <div class="icon-text-box">
                    <span>
                      <img src="https://cdn.shopify.com/s/files/1/0084/8602/7327/files/credit-card_1_1_150x.svg?v=1693988743" alt="icons" class="cart-rating-icons" loading="lazy" width="30" height="30"/>
                    </span>
                    <h6>Secured Payment</h6>
                  </div>
                  <div class="icon-text-box">
                    <span>
                     <img src="https://cdn.shopify.com/s/files/1/0084/8602/7327/files/feedback_1_150x.svg?v=1693988743" alt="icons" class="cart-rating-icons" loading="lazy" width="30" height="30"/>
                    </span>
                    <h6>Rated 4.9 by 1000+ Happy Customers</h6>
                  </div>
              </div>
            </div>
          {% endif %}
        </div>
      </div>
    </form> 
  </div>
</cart-drawer>

<script>

// Function to calculate and set the total height as a CSS variable
function setCartFooterHeight() {
    // Select all elements with the class 'cart-drawer__footer' and attribute 'data-initialized="true"'
    const footerElements = document.querySelectorAll('.cart-drawer__footer[data-initialized="true"]');

    // Initialize a variable to keep track of the total height
    let totalHeight = 0;

    // Iterate through each footer element to calculate the total height
    footerElements.forEach(element => {
        // Get the computed style of the element
        const style = window.getComputedStyle(element);
        
        // Get the element's height including margins
        const height = element.offsetHeight;
        const marginTop = parseFloat(style.marginTop);
        const marginBottom = parseFloat(style.marginBottom);
        
        // Add the total height (including margins) to the totalHeight variable
        totalHeight += height + marginTop + marginBottom;
    });

    // Select the cart-drawer element
    const cartDrawer = document.querySelector('.cart-drawer');

    // Set the CSS variable --cart-footer-height on the cart-drawer element
    if (cartDrawer) {
        cartDrawer.style.setProperty('--cart-footer-height', `${totalHeight}px`);
    }

    // Optionally, log the result for debugging purposes
    console.log(`Total height of cart-drawer__footer elements with data-initialized="true": ${totalHeight}px`);
}

// Function to observe changes in the DOM
function observeDOMChanges() {
    const observer = new MutationObserver((mutationsList) => {
        // Check each mutation record
        for (let mutation of mutationsList) {
            // Check if nodes were added to the cart-drawer__footer elements
            if (mutation.type === 'childList') {
                setCartFooterHeight();
            }
        }
    });

    // Target nodes to observe
    const footerElements = document.querySelectorAll('.cart-drawer__footer');

    // Configuration of the observer
    const config = { childList: true, subtree: true };

    // Start observing each footer element for child additions
    footerElements.forEach(element => {
        observer.observe(element, config);
    });
}

// Ensure the script runs after the DOM content is fully loaded
window.addEventListener('load', () => {
    setCartFooterHeight();
    observeDOMChanges();
});


</script>

{% schema %}
{
  "name": "Cart Drawer",
  "settings": [
    {
      "type": "text",
      "id": "cart_title",
      "label": "Cart Title",
      "default": "Your Cart"
    },
    {
      "type": "header",
      "content": "Empty Cart"
    },
    {
      "type": "text",
      "id": "empty_text",
      "label": "Empty cart message"
    },
    {
      "type": "url",
      "id": "button",
      "label": "Empty cart shop link"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Empty cart button text"
    }
  ]
}
{% endschema %}