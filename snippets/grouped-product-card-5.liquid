{% liquid
  assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ','
  assign collection_title = collection.title | downcase
  assign sorted_products = collection.products | sort: 'title'
  assign all_colors = '' | split: ','

  for p in sorted_products
    assign product_color = ''
    for option in p.options_with_values
      assign option_name = option.name | downcase
      if color_label contains option_name
        assign product_color = option.values[0] | handleize
      endif
    endfor

    unless all_colors contains product_color or product_color == ''
      if all_colors == ''
        assign all_colors = product_color
      else
        assign all_colors = all_colors | append: ',' | append: product_color
      endif
      assign all_colors = all_colors | push: product_color
    endunless
  endfor

  assign all_colors_array = all_colors | split: ','
  assign swatch_order = all_colors_array | sort
  
  capture color_swatch_list
    assign hidden_swatches = 0
    assign swatch_count = 1

    for color_handle in swatch_order
      assign matched_product = sorted_products | where: "title", color_handle | first

      if matched_product == blank
        for p in sorted_products
          assign product_color = ''
          for option in p.options_with_values
            assign option_name = option.name | downcase
            if color_label contains option_name
              assign product_color = option.values[0] | handleize
            endif
          endfor
          if product_color == color_handle
            assign matched_product = p
          endif
        endfor
      endif

      if matched_product != blank
        assign product_color_value = ''
        for option in matched_product.options_with_values
          assign option_name = option.name | downcase
          if color_label contains option_name
            assign product_color_value = option.values[0]
          endif
        endfor

        assign swatch_file_name = product_color_value | remove: "(" | remove: ")" | handle | append: '.png'
        assign swatch_link = matched_product.url

        assign element_classes = 'product-card__swatch'

        if swatch_count > 3
          assign element_classes = element_classes | append: ' hidden'
          assign hidden_swatches = hidden_swatches | plus: 1
        endif

        echo "<a href='"
        echo swatch_link
        echo "' class='"
        echo element_classes
        echo "' style='background-image: url("
        echo swatch_file_name | file_url
        echo ")' data-tooltip='"
        echo product_color_value | escape
        echo "'></a>"

        assign swatch_count = swatch_count | plus: 1
      endif
    endfor

    if hidden_swatches > 0
      echo '<button data-hidden-swatches class="body-xs blue">+'
      echo hidden_swatches
      echo ' more</button>'
    endif
  endcapture
%}


<grouped-product-card data-collection-id="{{collection.id}}">
  <div class="product-card {% if simple_card == true %}product-card-simple{% endif %}">
    <div class="product-card__image">
      <a href="{{ product_card_product.url }}">
        {% render 'lazy-image', image: product_card_product.featured_media, fade: true, classes: 'img-fill', aria-label: "image" %}
        {% if product_card_product.media[1] != null %}
          {% render 'lazy-image', image: product_card_product.media[1], fade: true, classes: 'img-fill', aria-label: "image" %}
        {% endif %}

        {% assign lowercase_tags = product_card_product.tags | join: '~~~' | downcase | split: '~~~' %}

        <div class="product-card__image-label body-xs {% if template.suffix == 'last-chance' %}hidden{% endif %}">
          {% if product_card_product.first_available_variant.metafields.custom.use != blank %}
            {{ product_card_product.first_available_variant.metafields.custom.use }}
          {% elsif lowercase_tags contains 'indoor' and lowercase_tags contains 'outdoor' %}
            Indoor/Outdoor
          {% elsif lowercase_tags contains 'indoor' %}
            Indoor
          {% elsif lowercase_tags contains 'outdoor' %}
            Outdoor
          {% endif %}
        </div>

        {% if product_card_product.selected_or_first_available_variant.metafields.custom.last_chance_price.value != blank and product_card_product.price > product_card_product.selected_or_first_available_variant.metafields.custom.last_chance_price.value %}
          {% assign price_change = product_card_product.price | minus: product_card_product.selected_or_first_available_variant.metafields.custom.last_chance_price.value %}
          {% assign percent_discount = price_change | times: 100 | divided_by: product_card_product.price %}
        <div class="product-card__discount-flag">
          <div class="product-card__discount-amount">{{ percent_discount }} <span>%</span></div>
          <span>off</span>
        </div>
        {% endif %}
      </a>
    </div>
    {% if simple_card == true %}<div>{% endif %}

    {% if template.suffix == 'last-chance' %}
      <div class="product-card__type-label body-xs">
        {% if product_card_product.first_available_variant.metafields.custom.use != blank %}
          {{ product_card_product.first_available_variant.metafields.custom.use }}
        {% elsif lowercase_tags contains 'indoor' and lowercase_tags contains 'outdoor' %}
          Indoor/Outdoor
        {% elsif lowercase_tags contains 'indoor' %}
          Indoor
        {% elsif lowercase_tags contains 'outdoor' %}
          Outdoor
        {% endif %}
      </div>
    {% endif %}

    {% if section.settings.show_metafield_style %}
      {% if product_card_product.metafields.custom.product_card_style.value != blank %}
        <div class="product-card__metafield-style">
          {{ product_card_product.metafields.custom.product_card_style.value }}
        </div>
      {% endif %}
    {% endif %}
      
    <a href="{{ product_card_product.url }}">
      <div class="product-card__title h3 blue">
        {{ title | default: collection.title | replace: ' | ', '<br>' }}
        <span class="body">{{ product_card_product.options_by_name['color'].values[0]  | capitalize }}</span>
      </div>
    </a>

    {% if customer and customer.b2b? %}
      <p class="product-card__price body blue">
        {% assign original_price = product_card_product.selected_or_first_available_variant.metafields.custom.variant_original_sale_price | times: 100 %}
        {% if original_price > 0 %}
          <span class="old-price">{{ original_price | money_without_trailing_zeros }}</span>
          <span>{{ product_card_product.price | money_without_trailing_zeros }}</span>
        {% else %}
          <span>{{ product_card_product.price | money_without_trailing_zeros }}</span>
        {% endif %}        
      </p>
    {% else %}
      <p class="product-card__price body blue">
        {% if product_card_product.selected_or_first_available_variant.metafields.custom.last_chance_price.value != blank and product_card_product.price > product_card_product.selected_or_first_available_variant.metafields.custom.last_chance_price.value %}
          <span class="old-price">{{ product_card_product.price | money_without_trailing_zeros }}</span>
          <span>{{ product_card_product.selected_or_first_available_variant.metafields.custom.last_chance_price.value | money_without_trailing_zeros }}</span>
        {% else %}
          <span>{{ product_card_product.price | money_without_trailing_zeros }}</span>
        {% endif %}
      </p>
    {% endif %}

    {% unless template.suffix == 'last-chance' %}
      {%- if show_options -%}
        <div class="product-card__swatches">
          {{ color_swatch_list }}
        </div>
      {%- endif -%}
    {% endunless %}

    {% if collection.metafields.custom.short_description != blank %}
      {% unless simple_card == true %}
        <div class="product-card__description body" {% unless template.suffix == "last-chance" %}style="display: none;{% endunless %}">
          {{ collection.metafields.custom.short_description }}

          {%- if collection.metafields.custom.dimensions != blank and template.suffix == 'last-chance' -%}
            <div class="body product-card__dimensions">({{ collection.metafields.custom.dimensions }})</div>
          {%- endif -%}
        </div>
      {% endunless %}
    {% endif %}

    {% if template.suffix == 'last-chance' %}
      <div>
      {% assign isSoldOut = false %}
      {% unless product_card_product.selected_or_first_available_variant.available and product_card_product.selected_or_first_available_variant.inventory_policy != 'continue' %}
        {% assign isSoldOut = true %}
      {% endunless %}
        
      <button {% unless isSoldOut %}data-quick-add{% endunless %} class="product-card__quick-add button" data-variant="{{ product_card_product.selected_or_first_available_variant.id }}" {% if isSoldOut %}disabled="disabled"{% endif %}>
        {% if isSoldOut %}
          <span>Sold Out</span>
        {% else %}
          <span>Add to Cart</span>
        {% endif %}
        <div class="loading-overlay__spinner">
          <svg
            aria-hidden="true"
            focusable="false"
            role="presentation"
            class="spinner"
            viewBox="0 0 66 66"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
          </svg>
        </div>
      </button>
      </div>
    {% else %}
      <a href="{{ product_card_product.url }}" class="text-link-2 gold-secondary--dark product-card__link">
      {{- button_text }} <span class="btn-arrow"> > </span> </a>
    {% endif %}
  {% if simple_card == true %}</div>{% endif %}
  </div>
</grouped-product-card>